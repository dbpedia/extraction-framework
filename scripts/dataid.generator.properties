# download and extraction target dir
# the local file directory containing the current version of dbpedia (/.../.../.../$version)
# Replace with your Wikipedia dump download directory (should not change over the course of a release)
 base-dir=/home/chile/DBpedia/dataidtest

# The DBpedia version to be extracted (in this format: YYYY-MM)
dbpedia-version=2016-10

# List of languages or article count ranges, e.g. 'en,de,fr' or '10000-20000' or '10000-', or '@mappings'
languages=@all

# json file containing all DataID relevant config entries (make sure to update these before executing!)
dataid-config=dataidConfig.json

# Serialization URI policies and file formats. Quick guide:
# uri-policy keys: uri, generic, xml-safe, reject-long
# uri-policy position modifiers: -subjects, -predicates, -objects, -datatypes, -contexts
# uri-policy values: comma-separated languages or '*' for all languages
# format values: n-triples, n-quads, turtle-triples, turtle-quads, trix-triples, trix-quads
# See http://git.io/DBpedia-serialization-format-properties for details.

# For backwards compatibility, en uses generic URIs. All others use local IRIs.
uri-policy.uri=uri:en; generic:en
uri-policy.iri=generic:en

#see universal.properties
# NT is unreadable anyway - might as well use URIs for en
# format.nt.gz=n-triples;uri-policy.uri
# format.nq.gz=n-quads;uri-policy.uri

# For the DataIdGenerator we include all known compressions and formats
# TODO needs extension to other serializations or compressions
format.ttl.gz=turtle-triples;uri-policy.iri
format.tql.gz=turtle-quads;uri-policy.iri
format.ttl.bz2=turtle-triples;uri-policy.iri
format.tql.bz2=turtle-quads;uri-policy.iri
format.nt.gz=n-triples;uri-policy.uri
format.nq.gz=n-quads;uri-policy.uri
format.nt.bz2=n-triples;uri-policy.uri
format.nq.bz2=n-quads;uri-policy.uri
format.xml.bz2=n-triples;uri-policy.uri
format.xml.gz=n-triples;uri-policy.uri
