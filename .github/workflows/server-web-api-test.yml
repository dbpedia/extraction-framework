# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: DIEF Server Component Web API Extraction Tests

on:
  push:
    branches: [ master , dev]
  pull_request:
    branches: [ master , dev]

jobs:
  build:

    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      # needed for Wikimedia API calls
      JAVA_TOOL_OPTIONS: '-Dhttp.agent=curl/8.6.0 -Dextract.wikiapi.customUserAgent.enabled=true -Dextract.wikiapi.customUserAgent.text=curl/8.6.0' 
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build DIEF with Maven
      run: mvn clean install -Dskip=true -DskipTests -Dmaven.source.skip=true -Dhttp.keepAlive=false -Dmaven.wagon.http.pool=false -Dmaven.wagon.http.retryHandler.count=3

    - name: Debug List Maven repo and parent POM
      run: |
        echo "Listing parent POM and Maven repo contents:"
        ls -l ../pom.xml || ls -l ../../pom.xml || true
        ls -lR ~/.m2/repository/org/dbpedia/extraction || true

    - name: Debug Print effective POM for server module
      run: |
        cd server
        mvn help:effective-pom -Doutput=effective-pom.xml
        cat effective-pom.xml
        cd ..
    - name: Start DBpedia Server
      run: |
        cd server
        ../run server &
        SERVER_PID=$!
        echo "Server started with PID $SERVER_PID"
        echo $SERVER_PID > server.pid
    - name: Wait for Server to be Ready
      run: |
        echo "Waiting for DIEF server to listen on localhost:9999..."
        for i in {1..120}; do
          if nc -z localhost 9999; then
            echo "Server is ready!"
            break
          fi
          echo "Attempt $i: Server not ready yet, waiting..."
          sleep 5
        done
        if ! nc -z localhost 9999; then
          echo "Server failed to start within 10 minutes"
          exit 1
        fi
    - name: Run Coordinate Test
      run: |
        cd scripts/src/main/bash
        ./coords-integration-test.sh
    - name: Stop DBpedia Server
      run: |
        if [ -f server.pid ]; then
          SERVER_PID=$(cat server.pid)
          echo "Stopping server with PID $SERVER_PID"
          kill -TERM $SERVER_PID || kill -KILL $SERVER_PID
          rm server.pid
        fi
    - uses: act10ns/slack@v1
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#dev-team'
      if: failure()
