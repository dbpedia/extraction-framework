<?php
# This file was automatically generated by the MediaWiki 1.22wmf9
# installer. If you make manual changes, please keep track in case you
# need to recreate them later.
#
# See includes/DefaultSettings.php for all configurable settings
# and their default values, but don't forget to make changes in _this_
# file, not there.
#
# Further documentation for configuration settings may be found at:
# http://www.mediawiki.org/wiki/Manual:Configuration_settings

# Protect against web entry
if ( !defined( 'MEDIAWIKI' ) ) {
	exit;
}

error_reporting( -1 );
ini_set( 'display_errors', 1 );

$wgShowExceptionDetails = true;

#This section checks the api parameters for the lang/uselang parameter
#When running the update.php script: remove this section and uncomment
#the direct language initialization below to the language you want to update
if ( isset( $_REQUEST['uselang'] ) ) {
	$languageCode = $_REQUEST['uselang'];
} else if ( isset( $_REQUEST['lang'] ) ) {
	# used for script and css URLs
	$languageCode = $_REQUEST['lang'];
} else {
	die( "Missing request parameter 'uselang' or 'lang'\n" );
}
#$languageCode = 'de';

$underscoreLanguageCode = str_replace('-', '_', $languageCode);

## Uncomment this to disable output compression
# $wgDisableOutputCompression = true;

$wgSitename = "Wikipedia_".$underscoreLanguageCode;
$wgMetaNamespace = "Project";

## The URL base path to the directory containing the wiki;
## defaults for all runtime URL paths are based off of this.
## For more information on customizing the URLs
## (like /w/index.php/Page_title to /wiki/Page_title) please see:
## http://www.mediawiki.org/wiki/Manual:Short_URL
$wgScriptPath = "/mediawiki";
$wgScriptExtension = ".php";

## The protocol and server name to use in fully-qualified URLs
$wgServer = "http://localhost:8008";

## The relative URL path to the skins directory
$wgStylePath = "$wgScriptPath/skins";

## The relative URL path to the logo.  Make sure you change this from the default,
## or else you'll overwrite your logo when you upgrade!
$wgLogo             = "$wgStylePath/common/images/wiki.png";

## UPO means: this is also a user preference option

$wgEnableEmail = false;
$wgEnableUserEmail = false; # UPO

$wgEmergencyContact = "apache@localhost";
$wgPasswordSender = "apache@localhost";

$wgEnotifUserTalk = false; # UPO
$wgEnotifWatchlist = false; # UPO
$wgEmailAuthentication = false;

## Database settings
$wgDBtype = "mysql";
$wgDBserver = ":/var/run/mysqld/mysqld.sock";
$wgDBname = $underscoreLanguageCode."wiki";
$wgDBuser = "root";
$wgDBpassword = "";

## Debug SQL queries
$wgShowSQLErrors = true;
$wgDebugDumpSql  = true;
$wgShowDBErrorBacktrace = true;
$wgDebugLogFile = "/home/extractor/2016-10-extraction/mysql-db-error.log";

# MySQL specific settings
$wgDBprefix = "";

# MySQL table options to use during installation or update
$wgDBTableOptions = "ENGINE=InnoDB, DEFAULT CHARSET=binary";

# Experimental charset support for MySQL 5.0.
$wgDBmysql5 = true;

## Shared memory settings
$wgMainCacheType = CACHE_ACCEL;
$wgEnableParserCache = true;
$wgMemCachedServers = array();

## To enable image uploads, make sure the 'images' directory
## is writable, then set this to true:
$wgEnableUploads = false;
$wgUseImageMagick = true;
$wgImageMagickConvertCommand = "/usr/bin/convert";

# InstantCommons allows wiki to use images from http://commons.wikimedia.org
$wgUseInstantCommons = false;

## If you use ImageMagick (or any other shell command) on a
## Linux server, this will need to be set to the name of an
## available UTF-8 locale
$wgShellLocale = "en_US.utf8";

## If you want to use image uploads under safe mode,
## create the directories images/archive, images/thumb and
## images/temp, and make them all writable. Then uncomment
## this, if it's not already uncommented:
#$wgHashedUploadDirectory = false;

## Set $wgCacheDirectory to a writable directory on the web server
## to make your wiki go slightly faster. The directory should not
## be publically accessible from the web.
#$wgCacheDirectory = "$IP/cache";

# Site language code, should be one of the list in ./languages/Names.php
$wgLanguageCode = $languageCode;

$wgSecretKey = "788a8ef2c3ee638b9d5834c29967d6ea81424432df516b65c5910d41e014a5b1";

# Site upgrade key. Must be set to a string (default provided) to turn on the
# web installer while LocalSettings.php is in place
$wgUpgradeKey = "f25fbbad0e6fe8eb";

## Default skin: you can change the default skin. Use the internal symbolic
## names, ie 'cologneblue', 'monobook', 'vector':
$wgDefaultSkin = "vector";

## For attaching licensing metadata to pages, and displaying an
## appropriate copyright notice / icon. GNU Free Documentation
## License and Creative Commons licenses are supported so far.
$wgRightsPage = ""; # Set to the title of a wiki page that describes your license/copyright
$wgRightsUrl = "";
$wgRightsText = "";
$wgRightsIcon = "";

# Path to the GNU diff3 utility. Used for conflict resolution.
$wgDiff3 = "/usr/bin/diff3";

# Query string length limit for ResourceLoader. You should only set this if
# your web server has a query string length limit (then set it to that limit),
# or if you have suhosin.get.max_value_length set in php.ini (then set it to
# that value)
$wgResourceLoaderMaxQueryLength = -1;


$wgCacheEpoch = max( $wgCacheEpoch, gmdate( 'YmdHis', @filemtime( __FILE__ ) ) );
$wgUseTidy = true;
$wgMainCacheType = CACHE_MEMCACHED;
$wgParserCacheType = CACHE_MEMCACHED; # optional
$wgMessageCacheType = CACHE_MEMCACHED; # optional
$wgMemCachedServers = array( "127.0.0.1:11211" );
$wgDisableCounters = true;
$wgSessionsInObjectCache = true; # optional
$wgSessionCacheType = CACHE_MEMCACHED; # optional


$wgPFEnableStringFunctions = true;

# enabling extensions - please make sure all of these are cloned and installed under /extensions
wfLoadExtension( 'Babel' );
require_once( "$IP/extensions/CategoryTree/CategoryTree.php" );
wfLoadExtension( "CharInsert" );
wfLoadExtension( "Cite" );
wfLoadExtension( "ImageMap" );
wfLoadExtension( "InputBox" );
wfLoadExtension( "Interwiki" );
wfLoadExtension( "Math" );
require_once("$IP/extensions/GeoData/GeoData.php");
wfLoadExtension( "MobileFrontend");
wfLoadExtension( "ParserFunctions" );
wfLoadExtension( "Poem" );
wfLoadExtension( "SyntaxHighlight_GeSHi" );
require_once( "$IP/extensions/timeline/Timeline.php" );
wfLoadExtension( "wikihiero" );
require_once "$IP/extensions/Scribunto/Scribunto.php";
wfLoadExtension( "TextExtracts" );

# configure math extension
$wgMathValidModes = array('source');
$wgDefaultUserOptions['math'] = 'source';
$wgMathDisableTexFilter = 'always';

# Configuration for TextExtracts which removes noisy tags
$wgExtractsRemoveClasses = array( '.metadata', 'span.coordinates', 'span.geo-multi-punct', 'span.geo-nondefault', '#coordinates', '.reflist', '.citation', '#toc', '.tocnumber', '.references', '.reference', '.noprint');

$wgTemplateDataUseGUI = false;
$wgScribuntoDefaultEngine = 'luastandalone'; # faster but needs configuration read http://www.mediawiki.org/wiki/Extension:Scribunto
